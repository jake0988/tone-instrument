{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\n\nexport class Zero extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n    this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n\n    this._gain = new Gain({\n      context: this.context\n    });\n    /**\n     * Only outputs 0\n     */\n\n    this.output = this._gain;\n    /**\n     * no input node\n     */\n\n    this.input = undefined;\n    connect(this.context.getConstant(0), this._gain);\n  }\n  /**\n   * clean up\n   */\n\n\n  dispose() {\n    super.dispose();\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,QAAqB,sBAArB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAA0D,+BAA1D;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA;;;;;;;AAMA,OAAM,MAAOC,IAAP,SAAoBD,cAApB,CAAwD;EAoB7DE;IACC,MAAMC,MAAM,CAACC,MAAP,CAAcL,oBAAoB,CAACE,IAAI,CAACI,WAAL,EAAD,EAAqBC,SAArB,CAAlC,CAAN;IAnBQ,YAAe,MAAf;IAET;;;;IAGQ,aAAQ,IAAIV,IAAJ,CAAS;MAAEW,OAAO,EAAE,KAAKA;IAAhB,CAAT,CAAR;IAER;;;;IAGA,cAAS,KAAKC,KAAd;IAEA;;;;IAGA,aAAQC,SAAR;IAKCZ,OAAO,CAAC,KAAKU,OAAL,CAAaG,WAAb,CAAyB,CAAzB,CAAD,EAA8B,KAAKF,KAAnC,CAAP;EACA;EAED;;;;;EAGAG,OAAO;IACN,MAAMA,OAAN;IACAb,UAAU,CAAC,KAAKS,OAAL,CAAaG,WAAb,CAAyB,CAAzB,CAAD,EAA8B,KAAKF,KAAnC,CAAV;IACA,OAAO,IAAP;EACA;;AAhC4D","names":["Gain","connect","disconnect","optionsFromArguments","SignalOperator","Zero","constructor","Object","assign","getDefaults","arguments","context","_gain","undefined","getConstant","dispose"],"sources":["/Users/jakeg/code/tone-instrument/node_modules/tone/Tone/signal/Zero.ts"],"sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}