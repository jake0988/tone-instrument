{"ast":null,"code":"import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nexport class TimelineValue extends Tone {\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n  constructor(initialValue) {\n    super();\n    this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    this._timeline = new Timeline({\n      memory: 10\n    });\n    this._initialValue = initialValue;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  set(value, time) {\n    this._timeline.add({\n      value,\n      time\n    });\n\n    return this;\n  }\n  /**\n   * Get the value at the given time\n   */\n\n\n  get(time) {\n    const event = this._timeline.get(time);\n\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAwC,YAAxC;AACA,SAASC,IAAT,QAAqB,SAArB;AAOA;;;;AAGA,OAAM,MAAOC,aAAP,SAAmCD,IAAnC,CAAuC;EAc5C;;;EAGAE,YAAYC,YAAZ,EAA8B;IAE7B;IAjBQ,YAAe,eAAf;IAET;;;;IAGQ,iBAAgD,IAAIJ,QAAJ,CAAa;MAAEK,MAAM,EAAE;IAAV,CAAb,CAAhD;IAaP,KAAKC,aAAL,GAAqBF,YAArB;EACA;EAED;;;;;EAGAG,GAAG,CAACC,KAAD,EAAcC,IAAd,EAA2B;IAC7B,KAAKC,SAAL,CAAeC,GAAf,CAAmB;MAClBH,KADkB;MACXC;IADW,CAAnB;;IAGA,OAAO,IAAP;EACA;EAED;;;;;EAGAG,GAAG,CAACH,IAAD,EAAc;IAChB,MAAMI,KAAK,GAAG,KAAKH,SAAL,CAAeE,GAAf,CAAmBH,IAAnB,CAAd;;IACA,IAAII,KAAJ,EAAW;MACV,OAAOA,KAAK,CAACL,KAAb;IACA,CAFD,MAEO;MACN,OAAO,KAAKF,aAAZ;IACA;EACD;;AA3C2C","names":["Timeline","Tone","TimelineValue","constructor","initialValue","memory","_initialValue","set","value","time","_timeline","add","get","event"],"sources":["/Users/jakeg/code/tone-instrument/node_modules/tone/Tone/core/util/TimelineValue.ts"],"sourcesContent":["import { Timeline, TimelineEvent } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\n\ninterface TimelineValueEvent<T> extends TimelineEvent {\n\tvalue: T;\n}\n\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue<Type> extends Tone {\n\n\treadonly name: string = \"TimelineValue\";\n\n\t/**\n\t * The timeline which stores the values\n\t */\n\tprivate _timeline: Timeline<TimelineValueEvent<Type>> = new Timeline({ memory: 10 })\n\n\t/**\n\t * Hold the value to return if there is no scheduled values\n\t */\n\tprivate _initialValue: Type;\n\n\t/**\n\t * @param initialValue The value to return if there is no scheduled values\n\t */\n\tconstructor(initialValue: Type) {\n\n\t\tsuper();\n\t\tthis._initialValue = initialValue;\n\t}\n\n\t/**\n\t * Set the value at the given time\n\t */\n\tset(value: Type, time: Seconds): this {\n\t\tthis._timeline.add({\n\t\t\tvalue, time\n\t\t});\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value at the given time\n\t */\n\tget(time: Seconds): Type {\n\t\tconst event = this._timeline.get(time);\n\t\tif (event) {\n\t\t\treturn event.value;\n\t\t} else {\n\t\t\treturn this._initialValue;\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}